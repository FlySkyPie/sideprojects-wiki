{"title":"一種布林拓撲進化類神經網路基因演算法","text":"給定類神經網路輸入與輸出節點的數量，並給定資料集的前提下，究竟要設定多少隱藏神經元才能完成任務？這個問題可以理解成：\n\n> 在已知環境；且任務明確的前提下，智能體要具有多少資訊才能完成任務？\n\n當環境本身的資訊量非常龐大時，我們無法量化環境究竟具有多少資訊的情況，似乎也無法計算出智能體究竟需要多少資訊才能完成任務。綜觀生物演化，想必不是「先設想需要多少基因」再演化出能夠活下來的生物，而是「能夠活下來的生物自然擁有這麼多的基因」，因此隨著訓練過程同時嘗試較多神經的網路與較少神經的網路，最後能達成任務的網路大小就是好的網路大小。\n\n## 基因編碼\n\n![](#bnn-chromosome-spec.svg)\n\n一個布林類神經網路可以用一段染色體描述，染色體區分成兩個部份：\n\n- 定址基因\n- 連結基因\n\n定址基因決定這個網路擁有多少節點，換言之，決定網路的大小。連結基因則是描述兩個節點之間的連結。\n\n### 定址基因\n\n![](#address_space.svg)\n\n決定熵庫大小的基因。若定址基因儲存的變數為 $n$，則網路具有 $2^n$ 個節點，因此在定址基因為 1 byte 的前提下，本基因算法的定義最多可以描述有 $2^{256}$ 個節點的布林類神經網路。\n\n### 連結基因\n\n一段連結兩個類神經元節點的資訊可以被描述為：\n\n$$\nl=(a_1,a_2,w)\n$$\n\n- $a$ : address， 連結的定址， 訊號將會從 $a_1$ 送往 $a_2$\n- $w$ : weight，權值，決定訊號邏輯是否會被反轉\n\n因此一段用來描述連結的基因有三個部份：\n- 來源節點\n- 目標節點\n- 權值\n\n### 基因資料空間用量\n\n> 資料應該儲存為文字檔案\n> -- <cite>The UNIX Philosophy</cite>[^UNIX_Philosophy]\n\n使用二進制編碼的染色體檔案會無法直接被人類閱讀，這其實是有違 Unix 哲學的，若沒有良好的理由應該避免這麼做。因此接下來試著計算這麼做在資料壓縮上的利益。\n\n若一網路以 100 萬畫素相機作為輸入：\n\n- RGB -> 3 個 100 萬矩陣\n- 一個色彩值 0~255 -> 每一個單色像素花費 8 bit 的資料\n\n總計 24,000,000 個布林輸入：\n\n$$\n1,000,000 * 3 * 8 = 24,000,000\n$$\n\n布林類神經網路理論要求至少要4層網路\n\n- 1層輸入層\n- 2層隱藏層\n- 1層輸出層\n\n假設輸出值只有一個位元，因此先不考慮輸出層，總計需要 72M 個節點：\n\n$$\n24 M * 3 = 72 M\n$$\n\n即定址空間至少為 27 位元：\n\n$$\n\\log_2(72,000,000) = 26.1\n$$\n\n則一個連結至少需要多少資料表達：\n\n$$\n27+27+1 = 55 \\text{ bit}\n$$\n\n若使用字串描述十進制，則連結資訊至多會消耗 9 位數，平均消耗 8 位數：\n\n$$\n2^{27} = 134,217,728\n$$\n\n若使用字串儲存（十進制），\n`[定址1][定址2][權值][分割字符]`\n\n$$\n8 \\text{ char} + 8 \\text{ char} + 1 \\text{ char} + 1 \\text{ char} \\\\\n=18 \\text{ bytes} = 144 \\text{ bit}\n$$\n\n不過目前多使用 UTF-8 編碼，因此儲存空間會變成兩倍: 288 bit，\n結論：使用二進制定義的資料壓縮率為 0.19\n\n\n\n\n## 突變機制\n\n任一染色體經過突變之後會得到新的染色體：\n\n$$\nG' = f(G,m)\n$$\n\n$G'$: 後代染色體，為隨機變數\n$G$: 染色體\n$m$: 突變率，或為複製失敗的機率\n\n### 定址基因\n\n對染色體而言，定址基因有 $m$ 的機率會複製失敗，\n而失敗時又有 0.5 的機率會增加； 0.5 的機率會減少，\n因此當定址基因突變時，有一半一半的機率會加一或是減一，\n從而觸發「定址擴張」或「定址萎縮」的事件。\n\n### 連結基因\n\n參考染色體的異常模式[^Chromosome_abnormality]：\n\n- deletion\n- duplication\n- inversion\n\n考量 inversion 的破壞性，只保留前面兩者突變機制，因此對一段基因而言，突變的機制有兩種：\n\n- 刪除\n- 複製\n\n![](#segment_mutation.svg)\n\n複製可以用來探勘解；刪除則可以用來收斂解。\n對基因而言，有 $m$ 的機率會複製失敗，當複製失敗時有 0.5 的機率發生刪除；0.5 的機率發生複製。\n\n### 位元突變\n\n![](#bit_mutation.svg)\n\n位元突變是每一個位元的基因在複製給下一代時，\n皆有一定機率 $m$ 會發生複製錯誤，即邏輯反轉。\n\n透過基因複製與位元突變，便可產生不同的連結基因並增加網路的連結進而曠大網路的大小。\n\n### 定址擴張與萎縮\n\n![](#scale_mutation.svg)\n\n當定址基因發生突變時，整個網路的熵庫就會發生擴張或是萎縮。我們通常將輸入放置在拓撲排序的前方而輸入放在後方，因此當網路方生擴張時，會將原生的網路資訊一分為二，將後段部神經元的編號映射到新的熵庫後方。萎縮時則反向操作，與中間節點有關的所有連結資訊都會被刪除。\n\n[^UNIX_Philosophy]: Unix哲學 - 維基百科，自由的百科全書. (n.d.). Retrieved 2019-11-21, from https://zh.wikipedia.org/wiki/Unix哲學\n\n[^Chromosome_abnormality]: Chromosome abnormality - Wikipedia. (n.d.). Retrieved 2019-11-21, from https://en.wikipedia.org/wiki/Chromosome_abnormality\n\n---\n\n[![創用 CC 授權條款](https://i.creativecommons.org/l/by-sa/4.0/88x31.png)](http://creativecommons.org/licenses/by-sa/4.0/)  \nWei Ji以[創用CC 姓名標示-相同方式分享 4.0 國際 授權條款](http://creativecommons.org/licenses/by-sa/4.0/)釋出。","type":"text/markdown","created":"20231102133320006","modified":"20231102133435992","tags":"","revision":"0","bag":"default"}